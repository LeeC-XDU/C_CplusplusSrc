#include "BitVector.h"
#include <cstring>

/**********************************
构造函数:
函数功能:初始化所有位为0
说明:
作者: Lee.C
完成时间:2016-06-04
**************************************/
BitVector::BitVector(int num):N(num)
{
	/***********************************************************
	 * 存储N个位的数组，
	 * 《编程珠玑》原书中是N/BITPERWORD + 1，
	 * 如果N恰为BITPERWORD的倍数，那么又要浪费一个int的空间了，
	 * N取0时，仍会浪费一个int的空间，
	 * N非0非BITPERWORD的倍数时，最多是最后一个int不完全利用而已
	***********************************************************/k
	array = new int[(N-1)/BITPERWORD + 1];
	std::memset(array, 0, sizeof(int)*((N-1)/BITPERWORD + 1));
}

/**********************************
函数功能:置位某个位为1
参数1:i位
返回值:无
说明:详见位图笔记
作者: Lee.C
完成时间:2016-06-04
**************************************/
void BitVector::set(int i)
{
	array[i>>SHIFT] |= (1<<(i & MASK));
}


/**********************************
函数功能:清除某位，即置位某个位为0
参数1:i位
返回值:无
说明:详见位图笔记
作者: Lee.C
完成时间:2016-06-04
**************************************/
void BitVector::clr(int i)
{
	array[i>>SHIFT] &= ~(1<<(i & MASK));
}


/**********************************
函数功能:查看某位的状态
参数1:i位
返回值:第i个位的0或1状态
说明:详见位图笔记
作者: Lee.C
完成时间:2016-06-04
**************************************/
int BitVector::test(int i)
{
	return array[i>>SHIFT] & (1<<(i & MASK));
}

BitVector::~BitVector()
{
	delete [] array;
}
